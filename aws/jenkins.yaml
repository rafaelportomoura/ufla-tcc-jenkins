AWSTemplateFormatVersion: '2010-09-09'

Parameters:
    Tenant:
        Type: String
    SgInitIp:
        Type: String
    VpcId:
        Type: AWS::EC2::VPC::Id
    SubnetId:
        Type: AWS::EC2::Subnet::Id
    AmiId:
        Type: AWS::EC2::Image::Id
    InstanceType:
        Type: String

Resources:
    JenkinsInstanceProfile:
        Type: "AWS::IAM::InstanceProfile"
        Properties:
            InstanceProfileName: !Sub ${Tenant}-jenkins-instance-profile
            Path: "/"
            Roles:
              - !Ref JenkinsRole

    JenkinsRole:
        Type: 'AWS::IAM::Role'
        Properties:
            RoleName: !Sub ${Tenant}-jenkins-trusted-policy
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                  - Effect: Allow
                    Principal:
                        Service: ec2.amazonaws.com
                    Action: 'sts:AssumeRole'
            Policies:
              - PolicyName: !Sub ${Tenant}-jenkins-S3-policy
                PolicyDocument:
                    Version: "2012-10-17"
                    Statement:
                      - Effect: Allow
                        Action:
                          - s3:PutObject
                        Resource: !Sub arn:${AWS::Partition}:s3:::*
            Path: /
            Tags:
              - Key: Service
                Value: IAM
              - Key: Resource
                Value: Role
              - Key: StackName
                Value: !Ref AWS::StackName
              - Key: StackId
                Value: !Ref AWS::StackId
              - Key: Region
                Value: !Ref AWS::Region
              - Key: Tenant
                Value: !Ref Tenant
              - Key: Name
                Value: !Sub ${Tenant}-jenkins-trusted-policy
            ManagedPolicyArns:
              - arn:aws:iam::aws:policy/AdministratorAccess

    JenkinsSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupName: !Sub ${Tenant}-jenkins-sg
            GroupDescription: Enable HTTP access via port 80
            VpcId: !Ref VpcId
            SecurityGroupIngress:
              - CidrIp: !Sub ${SgInitIp}/32
                FromPort: 8080
                IpProtocol: tcp
                ToPort: 8080
            Tags:
              - Key: Service
                Value: EC2
              - Key: Resource
                Value: SecurityGroup
              - Key: StackName
                Value: !Ref AWS::StackName
              - Key: StackId
                Value: !Ref AWS::StackId
              - Key: Region
                Value: !Ref AWS::Region
              - Key: Tenant
                Value: !Ref Tenant
              - Key: Name
                Value: !Sub ${Tenant}-jenkins-sg



    JenkinsInstance:
        Type: AWS::EC2::Instance
        Properties:
            InstanceInitiatedShutdownBehavior: "stop"
            IamInstanceProfile: !Ref JenkinsInstanceProfile
            SecurityGroupIds:
              - !Ref JenkinsSecurityGroup
            SubnetId: !Ref SubnetId
            ImageId: !Ref AmiId
            InstanceType: !Ref InstanceType
            BlockDeviceMappings:
              - DeviceName: "/dev/sdm"
                Ebs:
                    VolumeType: "io1"
                    Iops: 200
                    DeleteOnTermination: true
                    VolumeSize: 20
              - DeviceName: "/dev/sdk"
                NoDevice: {}
            Tags:
              - Key: Service
                Value: EC2
              - Key: Resource
                Value: Instance
              - Key: StackName
                Value: !Ref AWS::StackName
              - Key: StackId
                Value: !Ref AWS::StackId
              - Key: Region
                Value: !Ref AWS::Region
              - Key: Tenant
                Value: !Ref Tenant
              - Key: Name
                Value: !Sub ${Tenant}-jenkins
            UserData:
                Fn::Base64: !Sub "#!/bin/bash\nsudo dnf install -y https://s3.${AWS::Region}.amazonaws.com/amazon-ssm-${AWS::Region}/latest/linux_amd64/amazon-ssm-agent.rpm\nsudo dnf update â€“y\nsudo dnf upgrade -y\nsudo dnf install docker git -y\nsudo service docker start\nsudo chkconfig docker on\nsudo curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\nsudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\nsudo usermod -aG docker ssm-user\necho \"fim do script\" > /var/chegou_ao_fim.txt\n    #magic___^_^___line\n"
Outputs:
    JenkinsInstance:
        Description: "Jenkins Instance"
        Value: !Ref JenkinsInstance
        Export:
            Name: !Sub ${Tenant}-jenkins-instance
    JenkinsUrl:
        Description: Jenkins Url
        Value: !Sub http://${JenkinsInstance.PublicDnsName}:8080
        Export:
            Name: !Sub ${Tenant}-jenkins-url
