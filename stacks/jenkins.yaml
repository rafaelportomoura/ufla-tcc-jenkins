AWSTemplateFormatVersion: '2010-09-09'

Parameters:
    Tenant:
        Type: String
    SgInitIp:
        Type: String
    VpcId:
        Type: AWS::EC2::VPC::Id
    SubnetId:
        Type: AWS::EC2::Subnet::Id
    AmiId:
        Type: AWS::EC2::Image::Id
    InstanceType:
        Type: String
    GitRepositoryName:
        Type: String
    GitRepositoryCloneUrl:
        Type: String
    GitRepositoryBranch:
        Type: String
        Default: main
    ContainerName:
        Type: String
        Default: rafaelportomoura/jenkins:latest
    GitEmail:
        Type: String
    GitUserName:
        Type: String

Resources:
    JenkinsInstanceProfile:
        Type: "AWS::IAM::InstanceProfile"
        Properties:
            InstanceProfileName: !Sub ${Tenant}-jenkins-instance-profile
            Path: "/"
            Roles:
              - !Ref JenkinsRole

    JenkinsRole:
        Type: 'AWS::IAM::Role'
        Properties:
            RoleName: !Sub ${Tenant}-jenkins-trusted-policy
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                  - Effect: Allow
                Principal:
                    Service: ec2.amazonaws.com
                Action: 'sts:AssumeRole'
            Path: /
            Tags:
              - Key: Service
                Value: IAM
              - Key: Resource
                Value: Role
              - Key: StackName
                Value: !Ref AWS::StackName
              - Key: StackId
                Value: !Ref AWS::StackId
              - Key: Region
                Value: !Ref AWS::Region
              - Key: Tenant
                Value: !Ref Tenant
              - Key: Name
                Value: !Sub ${Tenant}-jenkins-trusted-policy
            ManagedPolicyArns:
              - arn:aws:iam::aws:policy/AWSCodeCommitReadOnly
              - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

    JenkinsSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupName: !Sub ${Tenant}-jenkins-sg
            GroupDescription: Enable HTTP access via port 80
            VpcId: !Ref VpcId
            SecurityGroupIngress:
              - CidrIp: !Sub ${SgInitIp}/32
                FromPort: 8080
                IpProtocol: tcp
                ToPort: 8080
            Tags:
              - Key: Service
                Value: EC2
              - Key: Resource
                Value: SecurityGroup
              - Key: StackName
                Value: !Ref AWS::StackName
              - Key: StackId
                Value: !Ref AWS::StackId
              - Key: Region
                Value: !Ref AWS::Region
              - Key: Tenant
                Value: !Ref Tenant
              - Key: Name
                Value: !Sub ${Tenant}-jenkins-sg



    JenkinsInstance:
        Type: AWS::EC2::Instance
        Properties:
            InstanceInitiatedShutdownBehavior: "stop"
            IamInstanceProfile: !Ref JenkinsInstanceProfile
            SecurityGroupIds:
              - !Ref JenkinsSecurityGroup
            SubnetId: !Ref SubnetId
            ImageId: !Ref AmiId
            InstanceType: !Ref InstanceType
            BlockDeviceMappings:
              - DeviceName: "/dev/sdm"
                Ebs:
                    VolumeType: "io1"
                    Iops: 200
                    DeleteOnTermination: true
                    VolumeSize: 20
              - DeviceName: "/dev/sdk"
                NoDevice: {}
            SsmAssociations:
              - DocumentName: !Ref Document
                AssociationParameters:
                  - Key: RepositoryPathOnEC2
                    Value:
                      - !Sub /home/ssm-user/${GitRepositoryName}
                  - Key: RepositoryCloneUrl
                    Value:
                      - !Ref GitRepositoryCloneUrl
                  - Key: RepositoryMainBranch
                    Value:
                      - !Ref GitRepositoryBranch
                  - Key: ContainerName
                    Value:
                      - !Ref ContainerName
                  - Key: GitEmail
                    Value:
                      - !Ref GitEmail
                  - Key: GitUserName
                    Value:
                      - !Ref GitUserName
                  - Key: Clone
                    Value:
                      - True

            UserData:
                Fn::Base64: !Sub |
                    #!/bin/bash
                    sudo dnf install -y https://s3.${AWS::Region}.amazonaws.com/amazon-ssm-${AWS::Region}/latest/linux_amd64/amazon-ssm-agent.rpm
                    sudo dnf update â€“y
                    sudo dnf upgrade -y
                    sudo dnf install docker git -y
                    sudo service docker start
                    sudo usermod -a -G docker ssm-user
                    sudo chkconfig docker on
                    sudo curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
                    sudo chmod +x /usr/local/bin/docker-compose
                    sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
                    echo "fim do script" > /var/chegou_ao_fim.txt

    Document:
        Type: AWS::SSM::Document
        Properties:
            Name: !Sub ${Tenant}-jenkins-instance
            TargetType: /AWS::EC2::Instance
            DocumentType: Command
            Content:
                schemaVersion: "2.2"
                description: SSM document content with deployment processes
                parameters:
                    RepositoryPathOnEC2:
                        type: String
                    RepositoryCloneUrl:
                        type: String
                    RepositoryMainBranch:
                        type: String
                    ContainerName:
                        type: String
                    GitEmail:
                        type: String
                    GitUserName:
                        type: String
                    Clone:
                        type: String
                        allowedValues:
                          - True
                          - False
                        default: False
                mainSteps:
                  - action: aws:runShellScript
                    name: gitConfiguration
                    precondition:
                        StringEquals:
                          - "{{ Clone }}"
                          - "True"
                    inputs:
                        runCommand:
                          - git config --system credential.helper "!aws codecommit credential-helper $@"
                          - git config --system credential.UseHttpPath true
                          - git config --system user.email "{{ GitEmail }}"
                          - git config --system user.name "{{ GitUserName }}"

                  - action: aws:runShellScript
                    name: cloneGitRepository
                    precondition:
                        StringEquals:
                          - "{{ Clone }}"
                          - "True"
                    inputs:
                        runCommand:
                          - "git clone {{ RepositoryUrl }}  {{ RepositoryPathOnEC2 }}"

                  - action: aws:runShellScript
                    name: updatesGitRepository
                    inputs:
                        runCommand:
                          - "cd {{ RepositoryPathOnEC2 }}"
                          - git pull origin {{ RepositoryMainBranch }}

                  - action: aws:runShellScript
                    name: upContainer
                    inputs:
                        runCommand:
                          - "cd {{ RepositoryPathOnEC2 }}"
                          - docker-compose up -d --build
            Tags:
              - Key: Service
                Value: SSM
              - Key: Resource
                Value: Document
              - Key: StackName
                Value: !Ref AWS::StackName
              - Key: StackId
                Value: !Ref AWS::StackId
              - Key: Region
                Value: !Ref AWS::Region
              - Key: Tenant
                Value: !Ref Tenant
              - Key: Name
                Value: !Sub ${Tenant}-jenkins-sg
